import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import TranslationsProvider from "@/lib/providers/translation-provider";
import initTranslations, { i18nNamespaces } from "@/lib/i18n/i18n";
import ModalProvider from "@/lib/providers/ModalProvider";
import { SessionProvider } from "next-auth/react";
import { auth } from "@/auth";
import { Toaster } from "sonner";
import { ThemeProvider } from "@/lib/providers/ThemeProvider";
import { getCurrentLocale } from "@/actions/getCurrentLocale";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();
  const currentLocale = await getCurrentLocale() || "ru";
  const { resources } = await initTranslations({ 
    locale: currentLocale, 
    namespaces: i18nNamespaces 
  });

  return (
    <html lang={currentLocale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SessionProvider session={session}>
          <TranslationsProvider
            namespaces={i18nNamespaces}
            locale={currentLocale}
            resources={resources}
          >
            <ThemeProvider attribute='class' defaultTheme='dark' enableSystem>
              <main className='w-screen max-h-fit min-h-screen bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-slate-100 dark:from-slate-500 to-slate-300 dark:to-slate-900'>
                {children}
              </main>
            </ThemeProvider>
            <ModalProvider />
            <Toaster />
          </TranslationsProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
